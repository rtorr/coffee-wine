// Generated by CoffeeScript 1.4.0
(function() {
  var BSON, connectToMongoServer, mongo, mongoDatabase, mongoServer, populateWineDatabase, wineDataBase;

  mongo = require('mongodb');

  mongoServer = mongo.Server;

  mongoDatabase = mongo.Db;

  BSON = mongo.BSONPure;

  connectToMongoServer = new mongoServer('localhost', 27017, {
    auto_reconnect: true
  });

  wineDataBase = new mongoDatabase('winedb', connectToMongoServer);

  wineDataBase.open(function(err, wineDataBase) {
    if (!err) {
      console.log("Connected to 'winedb' database");
      return wineDataBase.collection('wines', {
        safe: true
      }, function(err, collection) {
        if (err) {
          console.log("The 'wines' collection doesn't exist. Creating it with sample data...");
          return populateDB();
        }
      });
    }
  });

  exports.findById = function(req, res) {
    var id;
    id = req.params.id;
    console.log('Retrieving wine: ' + id);
    return wineDataBase.collection('wines', function(err, collection) {
      return collection.findOne({
        '_id': new BSON.ObjectID(id)
      }, function(err, item) {
        return res.send(item);
      });
    });
  };

  exports.findAll = function(req, res) {
    return wineDataBase.collection('wines', function(err, collection) {
      return collection.find().toArray(function(err, items) {
        return res.send(items);
      });
    });
  };

  exports.addWine = function(req, res) {
    var wine;
    wine = req.body;
    console.log('Adding wine: ' + JSON.stringify(wine));
    return wineDataBase.collection('wines', function(err, collection) {
      return collection.insert(wine, {
        safe: true
      }, function(err, result) {
        if (err) {
          return res.send({
            'error': 'An error has occured'
          });
        } else {
          console.log('Success: ' + JSON.stringify(result[0]));
          return res.send(result[0]);
        }
      });
    });
  };

  exports.updateWine = function(req, res) {
    var id, wine;
    id = req.params.id;
    wine = req.body;
    console.log('Updating wine: ' + id);
    console.log(JSON.stringify(wine));
    return wineDataBase.collection('wines', function(err, collection) {
      return collection.update({
        '_id': new BSON.ObjectID(id)
      }, wine, {
        safe: true
      }, function(err, result) {
        if (err) {
          console.log('Error updating wine: ' + err);
          return res.send({
            'error': 'An error has occured'
          });
        } else {
          console.log('' + result + ' dociment(s) updated');
          return res.send(wine);
        }
      });
    });
  };

  exports.deleteWine = function(req, res) {
    var id;
    id = req.params.id;
    console.log('Deleting wine: ' + id);
    return wineDataBase.collection('wine', function(err, collection) {
      return collection.remove({
        '_id': new BSON.ObjectID(id),
        safe: true
      }, function(err, result) {
        if (err) {
          return res.send({
            'error': 'An error has occurred - ' + err
          });
        } else {
          console.log('' + result + ' document(s) deleted');
          return req.send(req.body);
        }
      });
    });
  };

  populateWineDatabase = function() {
    var wines;
    wines = [
      {
        name: "CHATEAU DE SAINT COSME",
        year: "2009",
        grapes: "Grenache / Syrah",
        country: "France",
        region: "Southern Rhone",
        description: "The aromas of fruit and spice...",
        picture: "saint_cosme.jpg"
      }, {
        name: "LAN RIOJA CRIANZA",
        year: "2006",
        grapes: "Tempranillo",
        country: "Spain",
        region: "Rioja",
        description: "A resurgence of interest in boutique vineyards...",
        picture: "lan_rioja.jpg"
      }
    ];
    return wineDataBase.collection('wines', function(err, collection) {
      return collection.insert(wines, {
        safe: true
      }, function(err, result) {});
    });
  };

}).call(this);
